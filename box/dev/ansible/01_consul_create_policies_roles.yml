- name: Set variables
  set_fact:
    consul_master_token: "master"
    admin_policy: "admin-policy"
    producer_policy: "producer-policy"
    consumer_policy: "consumer-policy"

# Create policies
- name: Consul - create admin team policy
  shell:
    cmd: consul acl policy create -name {{ admin_policy }} -rules @policies/consul/admin_policy.hcl
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_master_token }}"
- name: Consul - create producer team policy
  shell:
    cmd: consul acl policy create -name {{ producer_policy }} -rules @policies/consul/producer_policy.hcl
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_master_token }}"
- name: Consul - create consumer team policy
  shell:
    cmd: consul acl policy create -name {{ consumer_policy }} -rules @policies/consul/consumer_policy.hcl
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_master_token }}"

#######################
### GENERATE tokens
#######################

- name: Generate admin token - with master token
  shell: consul acl token create -description="Admin token" -policy-name={{ admin_policy }} -format=json | jq -r .SecretID
  register: admin_token
  environment:
    CONSUL_HTTP_TOKEN: "{{ consul_master_token }}"

- name: Debug
  debug:
    msg: "Debug {{ admin_token }}"

- name: Generate producer token - with admin_token
  shell: consul acl token create -description="Producer token" -policy-name={{ producer_policy }} -format=json | jq -r .SecretID
  register: producer_token
  environment:
    CONSUL_HTTP_TOKEN: "{{ admin_token.stdout }}"

- name: Generate consumer token - with admin_token
  shell: consul acl token create -description="Consumer token" -policy-name={{ consumer_policy }} -format=json | jq -r .SecretID
  register: consumer_token
  environment:
    CONSUL_HTTP_TOKEN: "{{ admin_token.stdout }}"

#######################
### TESTS policies
#######################
### ACL
- name: List acl - admin token - allow
  shell: consul acl token list
  environment:
    CONSUL_HTTP_TOKEN: "{{ admin_token.stdout }}"

- name: List acl - producer token - deny
  shell: consul acl token list
  register: consul_acl_list_try1
  environment:
    CONSUL_HTTP_TOKEN: "{{ producer_token.stdout }}"
  failed_when: consul_acl_list_try1.rc == 0

- name: List acl - consumer token - deny
  shell: consul acl token list
  register: consul_acl_list_try2
  environment:
    CONSUL_HTTP_TOKEN: "{{ consumer_token.stdout }}"
  failed_when: consul_acl_list_try2.rc == 0

### K/V todo

### Intentions todo
